#
# this file is case sensitive, and probably picky on the spacing too.
#

# Controls messages.  You can set them one-by-one, or directly with
# the "debug-flags" option.  Note that messages are grouped in (up to)
# two ways: level (trace, debug, info, ...) and device (video, disk,
# io, ...)  For example, to get a video debug message, both msg-debug
# and msg-video must be set.

msg-trace 1
msg-debug 1
msg-info 1
msg-warn 1
msg-error 1

msg-disk 0
msg-video 0
msg-kybd 0
msg-io 0
msg-mem 0

# or you can set them all directly, so much for the abstraction:
debug-flags 0

# Log debugging info to disk instead of screen.  _Really_ slow.
#log /tmp/monitor.log

# Probably only useful for debugging protected mode code snippets.
# Real chips don't act like this.
boot-protected 0
# Give us a true debugger.  Causes sparks and explosions right now.
debugger 0
# Pause before running the boot sector
debug-on-boot 0
# exit on a halt, or start debugger?
exit-on-hlt 0

# Disks are assigned in the order listed.  
fdisk image_sda
fdisk image_sda
fdisk image_sda
hdisk image_sda
hdisk image_sda

bios-file bios.bin

# don't do more than 8 until the memory layout gets cleaned up.
megs-ram 8

# options are: mda, cga, ega, vga
video CGA


#
# Here are some settings specific to particular guests.
# Uncomment the section that you want.
#

# When the monitor gets an int == idle-int, it should yield.  This is
# to keep CPU usage for idle guests low.  Of course you gotta modify
# the idle loop of the guest to call this, which might make this not
# so useful in general.  Set this to 0 to disable.

# LINUX
idle-int 81

# something else...
#idle-int 0
