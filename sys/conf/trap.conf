#
# Format of this table is:
# V	T	H
#
# V - vector number of the vector
# T - type of vector: {t|i}[N|e|s[b]|f][u]
#     t - trap vector
#     i - interrupt vector
#     e - trap with error code
#     s - don't save caller-saved registers
#     b - pass %ebx as an argument on the stack
#     A - save all registers with "pushal" instruction
#     f - fast interrupt w. EOI
#     N - Direct vector, function goes right into idt
#     u - DPL = 3 instead of 0
#     U - DPL = 2 instead of 0
#     T - cs = GD_UT (user text segment) [default is GD_KT - kernel text]
# H - name of handler function.  Handler function is passed the trap
#     number for type 't', the trap number and error code for type 'e',
#     and the IRQ number for the interrupt vectors.


# Traps
0x00	tNT	$UIDT_VECT_TO_ADDR(0x00) 	# Divide by zero 
0x01	tuNT	$UIDT_VECT_TO_ADDR(0x01)	# Debug
0x02	iA	random_trap			# NMI (this is really an interrupt)
0x03	tuNT	$UIDT_VECT_TO_ADDR(0x03)	# Breakpoint
0x04	tNT	$UIDT_VECT_TO_ADDR(0x04)	# Overflow
0x05	tNT	$UIDT_VECT_TO_ADDR(0x05)	# Bounds check
0x06	tNT	$UIDT_VECT_TO_ADDR(0x06)	# Illegal instruction
0x07	tNT	$UIDT_VECT_TO_ADDR(0x07)	# Device error
0x08	ie	random_trap			# Double fault
#0x09--reserved
0x0a	tNT	$UIDT_VECT_TO_ADDR(0x0a)	# Bad TSS
0x0b	tNT	$UIDT_VECT_TO_ADDR(0x0b)	# Segmentation fault
0x0c	tNT	$UIDT_VECT_TO_ADDR(0x0c)	# Stack fault
0x0d	tNT	$UIDT_VECT_TO_ADDR(0x0d)	# GPF
0x0e	iAe	page_fault_handler		# Page fault
#0x0f--reserved
0x10	tNT	$UIDT_VECT_TO_ADDR(0x10)	# Floating point
0x11	tNT	$UIDT_VECT_TO_ADDR(0x11)	# Alignment fault
0x12	tNT	$UIDT_VECT_TO_ADDR(0x12)	# Machine check
#0x13-0x1f--reserved



# device interrupts (at irqnum + 0x20)
0x20	iA	sched_intr		# Clock interrupt
0x21	if	kbd_intr		# Keyboard interrupt
0x22	ifA	random_intr
0x23	ifA	random_intr
0x24	ifA	random_intr
0x25	ifA	random_intr
0x26	ifA	random_intr
0x27	ifA	random_intr
0x28	iA	rtc_intr		# Run-time clock
0x29	ifA	random_intr
0x2a	ifA	random_intr
0x2b	ifA	random_intr
0x2c	ifA	random_intr
0x2d	ifA	random_intr
0x2e	ifA	random_intr
0x2f	ifA	random_intr


# 0x30 - 0x5f -- are for kernel services
# KERNSRV_OFFSET=0x30 defined in xok/trap.h

# first system calls
0x30	iuN	syscall			# General System call
0x32	ius	yield			# Environment yield
0x33	ius	yields			# Yield and sleep
0x34	iuA	ipc1			# IPC1
0x35	iuA	ipc1s			# IPC1 and put caller to sleep
0x36	iuA	ipc2			# IPC2
0x37	iuA	ipc2s			# IPC2 and put caller to sleep
0x39	iuA	ipcas			# IPC ash and put caller to sleep
0x3a	iUA	ash_return		# Return from ash

#0x40-0x45
0x46    ius     fastyield		# fast yield

0x4a	iuA	plainipi		# test IPI
0x4b	iuN	fasttrap		# test trap speed


# IPIs
0x5a	iA	ipitest_ipi		# test IPI with delivery status
0x5b	iA	ipi_handler		# real IPI handler



# 0x60 - 0x100 -- are for the user to use

0x60	tuNT	$UIDT_VECT_TO_ADDR(0x60)
0x61	tuNT	$UIDT_VECT_TO_ADDR(0x61)
0x62	tuNT	$UIDT_VECT_TO_ADDR(0x62)
0x63	tuNT	$UIDT_VECT_TO_ADDR(0x63)
0x64	tuNT	$UIDT_VECT_TO_ADDR(0x64)
0x65	tuNT	$UIDT_VECT_TO_ADDR(0x65)
0x66	tuNT	$UIDT_VECT_TO_ADDR(0x66)
0x67	tuNT	$UIDT_VECT_TO_ADDR(0x67)
0x68	tuNT	$UIDT_VECT_TO_ADDR(0x68)
0x69	tuNT	$UIDT_VECT_TO_ADDR(0x69)
0x6a	tuNT	$UIDT_VECT_TO_ADDR(0x6a)
0x6b	tuNT	$UIDT_VECT_TO_ADDR(0x6b)
0x6c	tuNT	$UIDT_VECT_TO_ADDR(0x6c)
0x6d	tuNT	$UIDT_VECT_TO_ADDR(0x6d)
0x6e	tuNT	$UIDT_VECT_TO_ADDR(0x6e)
0x6f	tuNT	$UIDT_VECT_TO_ADDR(0x6f)
0x70	tuNT	$UIDT_VECT_TO_ADDR(0x70)
0x71	tuNT	$UIDT_VECT_TO_ADDR(0x71)
0x72	tuNT	$UIDT_VECT_TO_ADDR(0x72)
0x73	tuNT	$UIDT_VECT_TO_ADDR(0x73)
0x74	tuNT	$UIDT_VECT_TO_ADDR(0x74)
0x75	tuNT	$UIDT_VECT_TO_ADDR(0x75)
0x76	tuNT	$UIDT_VECT_TO_ADDR(0x76)
0x77	tuNT	$UIDT_VECT_TO_ADDR(0x77)
0x78	tuNT	$UIDT_VECT_TO_ADDR(0x78)
0x79	tuNT	$UIDT_VECT_TO_ADDR(0x79)
0x7a	tuNT	$UIDT_VECT_TO_ADDR(0x7a)
0x7b	tuNT	$UIDT_VECT_TO_ADDR(0x7b)
0x7c	tuNT	$UIDT_VECT_TO_ADDR(0x7c)
0x7d	tuNT	$UIDT_VECT_TO_ADDR(0x7d)
0x7e	tuNT	$UIDT_VECT_TO_ADDR(0x7e)
0x7f	tuNT	$UIDT_VECT_TO_ADDR(0x7f)
0x80	tuNT	$UIDT_VECT_TO_ADDR(0x80)
0x81	tuNT	$UIDT_VECT_TO_ADDR(0x81)
0x82	tuNT	$UIDT_VECT_TO_ADDR(0x82)
0x83	tuNT	$UIDT_VECT_TO_ADDR(0x83)
0x84	tuNT	$UIDT_VECT_TO_ADDR(0x84)
0x85	tuNT	$UIDT_VECT_TO_ADDR(0x85)
0x86	tuNT	$UIDT_VECT_TO_ADDR(0x86)
0x87	tuNT	$UIDT_VECT_TO_ADDR(0x87)
0x88	tuNT	$UIDT_VECT_TO_ADDR(0x88)
0x89	tuNT	$UIDT_VECT_TO_ADDR(0x89)
0x8a	tuNT	$UIDT_VECT_TO_ADDR(0x8a)
0x8b	tuNT	$UIDT_VECT_TO_ADDR(0x8b)
0x8c	tuNT	$UIDT_VECT_TO_ADDR(0x8c)
0x8d	tuNT	$UIDT_VECT_TO_ADDR(0x8d)
0x8e	tuNT	$UIDT_VECT_TO_ADDR(0x8e)
0x8f	tuNT	$UIDT_VECT_TO_ADDR(0x8f)
0x90	tuNT	$UIDT_VECT_TO_ADDR(0x90)
0x91	tuNT	$UIDT_VECT_TO_ADDR(0x91)
0x92	tuNT	$UIDT_VECT_TO_ADDR(0x92)
0x93	tuNT	$UIDT_VECT_TO_ADDR(0x93)
0x94	tuNT	$UIDT_VECT_TO_ADDR(0x94)
0x95	tuNT	$UIDT_VECT_TO_ADDR(0x95)
0x96	tuNT	$UIDT_VECT_TO_ADDR(0x96)
0x97	tuNT	$UIDT_VECT_TO_ADDR(0x97)
0x98	tuNT	$UIDT_VECT_TO_ADDR(0x98)
0x99	tuNT	$UIDT_VECT_TO_ADDR(0x99)
0x9a	tuNT	$UIDT_VECT_TO_ADDR(0x9a)
0x9b	tuNT	$UIDT_VECT_TO_ADDR(0x9b)
0x9c	tuNT	$UIDT_VECT_TO_ADDR(0x9c)
0x9d	tuNT	$UIDT_VECT_TO_ADDR(0x9d)
0x9e	tuNT	$UIDT_VECT_TO_ADDR(0x9e)
0x9f	tuNT	$UIDT_VECT_TO_ADDR(0x9f)
0xa0	tuNT	$UIDT_VECT_TO_ADDR(0xa0)
0xa1	tuNT	$UIDT_VECT_TO_ADDR(0xa1)
0xa2	tuNT	$UIDT_VECT_TO_ADDR(0xa2)
0xa3	tuNT	$UIDT_VECT_TO_ADDR(0xa3)
0xa4	tuNT	$UIDT_VECT_TO_ADDR(0xa4)
0xa5	tuNT	$UIDT_VECT_TO_ADDR(0xa5)
0xa6	tuNT	$UIDT_VECT_TO_ADDR(0xa6)
0xa7	tuNT	$UIDT_VECT_TO_ADDR(0xa7)
0xa8	tuNT	$UIDT_VECT_TO_ADDR(0xa8)
0xa9	tuNT	$UIDT_VECT_TO_ADDR(0xa9)
0xaa	tuNT	$UIDT_VECT_TO_ADDR(0xaa)
0xab	tuNT	$UIDT_VECT_TO_ADDR(0xab)
0xac	tuNT	$UIDT_VECT_TO_ADDR(0xac)
0xad	tuNT	$UIDT_VECT_TO_ADDR(0xad)
0xae	tuNT	$UIDT_VECT_TO_ADDR(0xae)
0xaf	tuNT	$UIDT_VECT_TO_ADDR(0xaf)
0xb0	tuNT	$UIDT_VECT_TO_ADDR(0xb0)
0xb1	tuNT	$UIDT_VECT_TO_ADDR(0xb1)
0xb2	tuNT	$UIDT_VECT_TO_ADDR(0xb2)
0xb3	tuNT	$UIDT_VECT_TO_ADDR(0xb3)
0xb4	tuNT	$UIDT_VECT_TO_ADDR(0xb4)
0xb5	tuNT	$UIDT_VECT_TO_ADDR(0xb5)
0xb6	tuNT	$UIDT_VECT_TO_ADDR(0xb6)
0xb7	tuNT	$UIDT_VECT_TO_ADDR(0xb7)
0xb8	tuNT	$UIDT_VECT_TO_ADDR(0xb8)
0xb9	tuNT	$UIDT_VECT_TO_ADDR(0xb9)
0xba	tuNT	$UIDT_VECT_TO_ADDR(0xba)
0xbb	tuNT	$UIDT_VECT_TO_ADDR(0xbb)
0xbc	tuNT	$UIDT_VECT_TO_ADDR(0xbc)
0xbd	tuNT	$UIDT_VECT_TO_ADDR(0xbd)
0xbe	tuNT	$UIDT_VECT_TO_ADDR(0xbe)
0xbf	tuNT	$UIDT_VECT_TO_ADDR(0xbf)
0xc0	tuNT	$UIDT_VECT_TO_ADDR(0xc0)
0xc1	tuNT	$UIDT_VECT_TO_ADDR(0xc1)
0xc2	tuNT	$UIDT_VECT_TO_ADDR(0xc2)
0xc3	tuNT	$UIDT_VECT_TO_ADDR(0xc3)
0xc4	tuNT	$UIDT_VECT_TO_ADDR(0xc4)
0xc5	tuNT	$UIDT_VECT_TO_ADDR(0xc5)
0xc6	tuNT	$UIDT_VECT_TO_ADDR(0xc6)
0xc7	tuNT	$UIDT_VECT_TO_ADDR(0xc7)
0xc8	tuNT	$UIDT_VECT_TO_ADDR(0xc8)
0xc9	tuNT	$UIDT_VECT_TO_ADDR(0xc9)
0xca	tuNT	$UIDT_VECT_TO_ADDR(0xca)
0xcb	tuNT	$UIDT_VECT_TO_ADDR(0xcb)
0xcc	tuNT	$UIDT_VECT_TO_ADDR(0xcc)
0xcd	tuNT	$UIDT_VECT_TO_ADDR(0xcd)
0xce	tuNT	$UIDT_VECT_TO_ADDR(0xce)
0xcf	tuNT	$UIDT_VECT_TO_ADDR(0xcf)
0xd0	tuNT	$UIDT_VECT_TO_ADDR(0xd0)
0xd1	tuNT	$UIDT_VECT_TO_ADDR(0xd1)
0xd2	tuNT	$UIDT_VECT_TO_ADDR(0xd2)
0xd3	tuNT	$UIDT_VECT_TO_ADDR(0xd3)
0xd4	tuNT	$UIDT_VECT_TO_ADDR(0xd4)
0xd5	tuNT	$UIDT_VECT_TO_ADDR(0xd5)
0xd6	tuNT	$UIDT_VECT_TO_ADDR(0xd6)
0xd7	tuNT	$UIDT_VECT_TO_ADDR(0xd7)
0xd8	tuNT	$UIDT_VECT_TO_ADDR(0xd8)
0xd9	tuNT	$UIDT_VECT_TO_ADDR(0xd9)
0xda	tuNT	$UIDT_VECT_TO_ADDR(0xda)
0xdb	tuNT	$UIDT_VECT_TO_ADDR(0xdb)
0xdc	tuNT	$UIDT_VECT_TO_ADDR(0xdc)
0xdd	tuNT	$UIDT_VECT_TO_ADDR(0xdd)
0xde	tuNT	$UIDT_VECT_TO_ADDR(0xde)
0xdf	tuNT	$UIDT_VECT_TO_ADDR(0xdf)
0xe0	tuNT	$UIDT_VECT_TO_ADDR(0xe0)
0xe1	tuNT	$UIDT_VECT_TO_ADDR(0xe1)
0xe2	tuNT	$UIDT_VECT_TO_ADDR(0xe2)
0xe3	tuNT	$UIDT_VECT_TO_ADDR(0xe3)
0xe4	tuNT	$UIDT_VECT_TO_ADDR(0xe4)
0xe5	tuNT	$UIDT_VECT_TO_ADDR(0xe5)
0xe6	tuNT	$UIDT_VECT_TO_ADDR(0xe6)
0xe7	tuNT	$UIDT_VECT_TO_ADDR(0xe7)
0xe8	tuNT	$UIDT_VECT_TO_ADDR(0xe8)
0xe9	tuNT	$UIDT_VECT_TO_ADDR(0xe9)
0xea	tuNT	$UIDT_VECT_TO_ADDR(0xea)
0xeb	tuNT	$UIDT_VECT_TO_ADDR(0xeb)
0xec	tuNT	$UIDT_VECT_TO_ADDR(0xec)
0xed	tuNT	$UIDT_VECT_TO_ADDR(0xed)
0xee	tuNT	$UIDT_VECT_TO_ADDR(0xee)
0xef	tuNT	$UIDT_VECT_TO_ADDR(0xef)
0xf0	tuNT	$UIDT_VECT_TO_ADDR(0xf0)
0xf1	tuNT	$UIDT_VECT_TO_ADDR(0xf1)
0xf2	tuNT	$UIDT_VECT_TO_ADDR(0xf2)
0xf3	tuNT	$UIDT_VECT_TO_ADDR(0xf3)
0xf4	tuNT	$UIDT_VECT_TO_ADDR(0xf4)
0xf5	tuNT	$UIDT_VECT_TO_ADDR(0xf5)
0xf6	tuNT	$UIDT_VECT_TO_ADDR(0xf6)
0xf7	tuNT	$UIDT_VECT_TO_ADDR(0xf7)
0xf8	tuNT	$UIDT_VECT_TO_ADDR(0xf8)
0xf9	tuNT	$UIDT_VECT_TO_ADDR(0xf9)
0xfa	tuNT	$UIDT_VECT_TO_ADDR(0xfa)
0xfb	tuNT	$UIDT_VECT_TO_ADDR(0xfb)
0xfc	tuNT	$UIDT_VECT_TO_ADDR(0xfc)
0xfd	tuNT	$UIDT_VECT_TO_ADDR(0xfd)
0xfe	tuNT	$UIDT_VECT_TO_ADDR(0xfe)
0xff	tuNT	$UIDT_VECT_TO_ADDR(0xff)
